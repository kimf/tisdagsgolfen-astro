---
import type { LeaderboardItem } from 'src/lib/buildLeaderboardItems';
import { shortName } from 'src/lib/formatters';

export interface Props {
  item: LeaderboardItem;
  sorting: 'rank' | 'kr' | 'scratch';
}

const { item, sorting } = Astro.props;

let pointValue = '';
let pointText = '';
let summaryString = '';
let subSummaryString = '';
let subSubSummaryString = `${item.events} rundor`;
if (sorting === 'kr') {
  pointValue = `${item.totalFines <= 0 ? '' : '+'}${item.totalFines}`;
  pointText = 'kr';
  summaryString = `${item.fines} kr`;
  subSummaryString = ``;
  subSummaryString += ` | ${item.beers} Ã¶l`;
  subSummaryString += ` | ${item.ciders} cider`;
} else if (sorting === 'rank') {
  pointValue = parseFloat(`${item.points}`).toFixed(1);
  pointText = '';
  const emptyPoints =
    item.points_array.length < 4 ? [...Array(4 - item.points_array.length)].map((_) => 0) : [];
  const emptySpecialPoints =
    item.special_array.length < 4 ? [...Array(2 - item.special_array.length)].map((_) => 0) : [];
  summaryString = `${[...item.points_array, ...emptyPoints].join(', ')} | ${[
    ...item.special_array,
    ...emptySpecialPoints
  ].join(', ')}`;
  subSubSummaryString = `${item.events} rundor | Snitt: ${item.average.toFixed(1)}`;
} else if (sorting === 'scratch') {
  pointValue = parseFloat(`${item.strokes}`).toFixed(0);
  pointText = '';
  summaryString = `${item.strokes_array.join(', ')}`;
}

const rankColor =
  item.rank && sorting === 'rank'
    ? item.rank > 4
      ? 'oklch(55.2% 0.016 285.938)'
      : item.rank === 1
        ? 'oklch(82.8% 0.189 84.429)'
        : item.rank === 2
          ? 'oklch(44.4% 0.011 73.639)'
          : item.rank === 3
            ? 'oklch(55.4% 0.135 66.442)'
            : 'oklch(55.2% 0.016 285.938)'
    : 'oklch(55.2% 0.016 285.938)';
---

{
  item.events >= 1 && (
    <div
      class="flex gap-4 items-center mb-2 p-2 border-l-4 border-b"
      style={`border-left-color: ${rankColor}`}
    >
      <strong class={`font-bold text-2xl vcr text-right text-${rankColor}`}>{item.rank}</strong>
      <div class="size-14">
        {item.player.avatarUrl === '1' ? (
          <img src={`/images/avatars/${item.player.id}.png`} />
        ) : (
          <img src="/images/avatars/default.png" />
        )}
      </div>

      <div class="flex flex-col content-center leading-2">
        <span class="uppercase font-bold vcr text-lg leading-6">
          {shortName(item.player.fullName)}
        </span>
        <div class="text-xs uppercase vcr">
          {summaryString} {subSummaryString}
        </div>
        <div class="text-xs uppercase vcr">{subSubSummaryString}</div>
      </div>
      <h5 class="vcr text-2xl ml-auto">
        {pointValue} <small class="ml-1 text-xs">{pointText}</small>
      </h5>
    </div>
  )
}
