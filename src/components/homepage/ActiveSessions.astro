---
import { getaActiveSessions } from 'src/db/queries/getActiveSessions';
import type { ActiveSession } from 'src/db/queries/getActiveSessions';
import Button from 'src/components/ui/button.astro';
import EventCard from './eventsrow/EventCard.astro';

const userId = await Astro.session?.get('userId');
const scoringSessions = await getaActiveSessions();

type SessionGroupKey = string;
const groupedSessionsObj: Record<SessionGroupKey, ActiveSession[]> = {};
for (const sesh of scoringSessions) {
  const key: SessionGroupKey = `${sesh.strokes}|${sesh.special}|${sesh.teamEvent}|${sesh.courseId}`;
  if (!groupedSessionsObj[key]) {
    groupedSessionsObj[key] = [];
  }
  groupedSessionsObj[key].push(sesh);
}
const groupedSessions: ActiveSession[][] = Object.values(groupedSessionsObj);

console.log(groupedSessions.length);

const ownedScoringSession = userId
  ? scoringSessions.find((sesh) => sesh.ownerId === Number(userId))
  : null;

const flattenedSessions = groupedSessions.flatMap((gs) => gs.map((s) => s));
---

<div class="inline-block px-3 first:pl-0">
  {
    flattenedSessions.map((sesh) => (
      <EventCard
        date={sesh.createdAt || ''}
        special={!!sesh.special}
        strokes={!!sesh.strokes}
        teamEvent={!!sesh.teamEvent}
      >
        <div id={`sesh.${sesh.id}`} class="flex justify-between">
          {userId && sesh.ownerId === Number(userId) && (
            <Button size="sm" intent="secondary">
              <a href={`/scoring/${sesh.id}`} class="btn">
                {sesh.state === 'PENDING' ? 'REDIGERA' : 'FORTSÄTT'}
              </a>
            </Button>
          )}
          <Button intent="inline" size="sm">
            <a href={`/scoring/${sesh.id}/leaderboard`} class="btn">
              LEDARTAVLA
            </a>
          </Button>
          {userId && sesh.ownerId !== Number(userId) && (
            <Button>
              <a href={`/scoring/new?joinId=${sesh.id}`} class="btn">
                FÖR SCORE
              </a>
            </Button>
          )}
        </div>
      </EventCard>
    ))
  }
</div>
{
  userId && !ownedScoringSession && groupedSessions.length === 0 && (
    <a href="/scoring/new" class="fixed new-round-btn bottom-2 left-2 animate-bounce-with-end">
      <Button>NY RUNDA</Button>
    </a>
  )
}
