---
import Button from 'src/components/ui/button.astro';
import EventCard from 'src/components/homepage/EventCard.astro';
import Link from 'src/assets/icons/link.svg';
import type { ScoringSession } from 'src/db/schema/scoring_sessions';
const userId = Astro.cookies.get('userId')?.value || undefined;

export interface Props {
  firstScoringSession: ScoringSession | null;
  ownedScoringSession: ScoringSession | null;
}

const { firstScoringSession, ownedScoringSession } = Astro.props;

const hasFinishedSession = ownedScoringSession && ownedScoringSession.state === 'PENDING';
const scoringSession = ownedScoringSession || firstScoringSession;
---

{
  scoringSession && (
    <EventCard date={scoringSession.createdAt || ''} final={!!scoringSession.partOfFinal} live>
      <div id={`scoringSession.${scoringSession.id}`} class="flex justify-between">
        <a
          href={
            !ownedScoringSession
              ? `/scoring/new?joinId=${scoringSession.id}`
              : `/scoring/${scoringSession.id}`
          }
        >
          {userId && (
            <Button size="xs" intent="default" class="absolute bottom-2 left-2">
              {hasFinishedSession ? 'REDIGERA' : ownedScoringSession ? 'FORTSÄTT' : 'FÖR SCORE'}
            </Button>
          )}
        </a>
      </div>

      <a
        href={
          scoringSession.partOfFinal
            ? `/finalleaderboard`
            : `/scoring/${scoringSession.id}/leaderboard`
        }
        class="absolute bottom-2 right-2"
      >
        <Link class="size-5" />
      </a>
    </EventCard>
  )
}
