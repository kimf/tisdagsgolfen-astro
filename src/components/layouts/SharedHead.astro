---
import { STORAGE_THEME_KEY, THEME_MAP } from 'src/lib/theme';

import { Font } from 'astro:assets';
import { Head } from 'astro-capo';

export interface Props {
  title?: string;
}

const { title } = Astro.props;
---

<Head>
  <meta charset="UTF-8" />
  <meta
    name="viewport"
    content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui"
  />
  <!-- Allow web app to be run in full-screen mode - iOS. -->
  <meta name="apple-mobile-web-app-capable" content="yes" />
  <!-- Allow web app to be run in full-screen mode - Android. -->
  <meta name="mobile-web-app-capable" content="yes" />
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
  <meta name="format-detection" content="telephone=no" />
  <meta name="generator" content={Astro.generator} />
  <Font cssVariable="--font-vcr" preload />
  <Font cssVariable="--font-mono" preload />

  <title>{title ? `${title} - ` : ''}Tisdagsgolfen</title>
  <meta name="theme-color" content="#f3f3f398" media="(prefers-color-scheme: light)" />
  <meta
    name="theme-color"
    content="oklch(0.141 0.005 285.823)"
    media="(prefers-color-scheme: dark)"
  />
  <link rel="icon" type="image/x-icon" href="/favicon.png" />

  <slot name="head" />
</Head>
<script is:inline define:vars={{ STORAGE_THEME_KEY, THEME_MAP }}>
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem(STORAGE_THEME_KEY))
      return localStorage.getItem(STORAGE_THEME_KEY);

    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? THEME_MAP.dark
      : THEME_MAP.light;
  };

  const isDark = getThemePreference() === THEME_MAP.dark;
  document.documentElement.classList[isDark ? 'add' : 'remove'](THEME_MAP.dark);

  const metaTag = document.querySelector('meta[name=theme-color]');
  metaTag.setAttribute('content', isDark ? 'oklch(0.141 0.005 285.823)' : '#f3f3f398');

  localStorage.setItem(STORAGE_THEME_KEY, isDark ? THEME_MAP.dark : THEME_MAP.light);
</script>
