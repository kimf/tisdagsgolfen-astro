---
import type { Hole } from 'src/db/schema/hole';
import StrokeDots from 'src/components/shared/StrokeDots.astro';
import type { ScoringSessionWithAllData } from 'src/db/queries/getScoringSession';
import { calculateExtraStrokes } from 'src/lib/calculateExtraStrokes';

interface Props {
  score?: ScoringSessionWithAllData['scorecards'][number]['scores'][number];
  scorecardId: number;
  teamScorecardId: number | null;
  name: string;
  hole: Hole;
  holesCount: number;
  givenStrokes: number;
  special: boolean | null;
  strokes: boolean | null;
  partOfFinal: boolean;
  oob?: boolean;
}

const {
  score,
  scorecardId,
  teamScorecardId,
  name,
  givenStrokes,
  hole,
  holesCount,
  special,
  strokes,
  partOfFinal,
  oob = false
} = Astro.props;
const extraStrokes = calculateExtraStrokes(hole.hcp, givenStrokes || 0, holesCount);

const beers = score && score.beers > 0 ? Array.from({ length: score.beers }, (_, i) => i + 1) : [];
const ciders =
  score && score.ciders > 0 ? Array.from({ length: score.ciders }, (_, i) => i + 1) : [];
const props = oob ? { 'hx-swap-oob': 'true' } : {};
---

<tr
  class="odd:bg-white even:bg-gray-50 border-b border-gray-500 score-row last:border-b-0"
  id={`scorecardRow-${scorecardId}-hole-${hole.id}`}
  {...props}
>
  <td class="text-left vcr w-[36%] h-24 border-r border-gray-500 rounded-bl-md">
    <div class="flex flex-col gap-2 w-full h-full p-4">
      <div class="flex flex-row gap-3 vcr uppercase font-bold">
        {name}

        <StrokeDots
          holeIndex={hole?.hcp || 0}
          givenStrokes={givenStrokes || 0}
          holesCount={holesCount}
        />
      </div>
      <div class="flex gap-2 flex-wrap">
        {beers.map((i) => <small>üç∫</small>)}
        {ciders.map((i) => <small>ü•§</small>)}
      </div>
    </div>
  </td>
  <td
    class={`w-[16%] p-2 text-center vcr  border-gray-500 ${special ? '' : 'border-r'}`}
    <div
    class="w-full min-h-20 content-center"
    x-on:click={`openScoring(
      ${hole.par}, ${hole.hcp}, ${hole.number}, "${name}", ${extraStrokes}, ${scorecardId}, ${teamScorecardId ?? 0}, ${score?.strokes || hole.par}, ${score?.putts || 2}, ${score?.beers || 0}, ${score?.ciders || 0})`}
  >
    {
      score && (
        <span
          class={`inline-block ${
            score?.strokes === hole.par - 1
              ? // birdie
                'border border-foreground/20 px-4 py-2.5 rounded-full'
              : // eagle
                score?.strokes === hole.par - 2
                ? 'border-4 border-double border-foreground/20 px-4 py-2.5 rounded-full'
                : // bogey
                  score?.strokes === hole.par + 1
                  ? 'border border-foreground/20 px-4 py-2'
                  : // double or more
                    score && score.strokes > hole.par + 1
                    ? 'border-4 border-double border-foreground/20 px-4 py-2'
                    : ''
          }`}
        >
          {score?.strokes}
        </span>
      )
    }

    {!score && <span>‚úèÔ∏è</span>}
  </td>
  {
    !(partOfFinal || special) && (
      <>
        <td class="w-[16%] p-2 text-center vcr border-r border-gray-500">{score?.putts}</td>
        <td
          class={`w-[16%] p-2 text-center vcr border-r border-gray-500 ${score?.fines ? '' : 'text-foreground/60'}`}
        >
          {score ? (score.fines ? score.fines : 0) : ''}
        </td>
      </>
    )
  }

  {
    !strokes && (
      <td class="w-[16%] p-2 text-center vcr border-gray-500 border-l rounded-br-md">
        {score?.points}
      </td>
    )
  }
</tr>
