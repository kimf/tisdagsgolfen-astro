---
import type { Hole } from 'src/db/schema/hole';
import StrokeDots from 'src/components/shared/StrokeDots.astro';
import type { ScoringSessionWithAllData } from 'src/db/queries/getScoringSession';
import { shortName } from 'src/lib/formatters';
import { calculateExtraStrokes } from 'src/lib/calculateExtraStrokes';
import ToPar from '../shared/ToPar.astro';

interface Props {
  scorecard: ScoringSessionWithAllData['scorecards'][number];
  hole: Hole;
  holesCount: number;
  oob?: boolean;
}

const { scorecard, hole, holesCount, oob = false } = Astro.props;

const extraStrokes = calculateExtraStrokes(hole.index, scorecard.givenStrokes || 0, holesCount);
const score = scorecard.scores.find((s) => s.hole === hole?.number);

const name = scorecard.players.map((player) => shortName(player.player.fullName)).join(', ');
const beers = score && score.beers > 0 ? Array.from({ length: score.beers }, (_, i) => i + 1) : [];
const ciders =
  score && score.ciders > 0 ? Array.from({ length: score.ciders }, (_, i) => i + 1) : [];
const props = oob ? { 'hx-swap-oob': 'true' } : {};
---

<tr
  class="odd:bg-white odd:dark:bg-gray-900 even:bg-gray-50 even:dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 active:scale-97 active:opacity-90"
  x-on:click={`openScoring(${hole.par}, ${hole.index}, ${hole.number}, "${name}", ${extraStrokes}, ${scorecard.id}, ${score?.strokes || hole.par}, ${score?.putts || 2}, ${score?.beers || 0}, ${score?.ciders || 0})`}
  id={`scorecardRow-${scorecard.id}`}
  {...props}
>
  <td class="text-left vcr w-[36%] h-24 border-r border-b">
    <div class="flex flex-col gap-2 w-full h-full p-4">
      <div class="flex flex-row gap-3 vcr uppercase font-bold">
        {name}

        <StrokeDots
          holeIndex={hole?.index || 0}
          givenStrokes={scorecard.givenStrokes || 0}
          holesCount={holesCount}
        />
      </div>
      <div class="flex flex-col gap-2">
        <!-- <div id={`toPar-${scorecard.id}`} hx-swap-oob="true">
          <ToPar toPar={scorecard.toPar || 0} color="white" />
        </div> -->
        <div>{beers.map((i) => <small>üç∫</small>)}</div>
        <div>{ciders.map((i) => <small>ü•§</small>)}</div>
      </div>
    </div>
  </td>
  <td class="w-[16%] p-2 text-center vcr border-r border-b">
    {score?.strokes}
  </td>
  <td class="w-[16%] p-2 text-center vcr border-r border-b">
    {score?.putts}
  </td>
  <td
    class={`w-[16%] p-2 text-center vcr border-r border-b ${score?.fines ? '' : 'text-foreground/60'}`}
  >
    {score?.fines ? score.fines : ''}
  </td>
  <td class="w-[16%] p-2 text-center vcr border-b">
    {score?.points}
  </td>
</tr>
