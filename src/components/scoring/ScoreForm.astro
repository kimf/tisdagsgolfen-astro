---
interface Props {
  special: boolean;
  id: number;
}

const { special, id } = Astro.props;
---

<div
  id="default-modal"
  tabindex="-1"
  aria-hidden="true"
  class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full"
>
  <div class="relative w-full max-w-2xl max-h-full p-4">
    <!-- Modal content -->
    <div class="relative bg-white rounded-lg shadow-sm dark:bg-gray-700">
      <!-- Modal header -->
      <div
        class="flex items-center justify-between p-4 border-b border-gray-200 rounded-t md:p-5 dark:border-gray-600"
      >
        <h3 class="text-xl font-semibold text-gray-900 dark:text-white">Terms of Service</h3>
        <button
          type="button"
          class="inline-flex items-center justify-center w-8 h-8 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900 ms-auto dark:hover:bg-gray-600 dark:hover:text-white"
          data-modal-hide="default-modal"
        >
          <svg
            class="w-3 h-3"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 14 14"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
          </svg>
          <span class="sr-only">Close modal</span>
        </button>
      </div>
      <!-- Modal body -->
      <div class="p-4 space-y-4 md:p-5">
        <p class="text-base leading-relaxed text-gray-500 dark:text-gray-400">
          With less than a month to go before the European Union enacts new consumer privacy laws
          for its citizens, companies around the world are updating their terms of service
          agreements to comply.
        </p>
        <p class="text-base leading-relaxed text-gray-500 dark:text-gray-400">
          The European Union’s General Data Protection Regulation (G.D.P.R.) goes into effect on May
          25 and is meant to ensure a common set of data rights in the European Union. It requires
          organizations to notify users as soon as possible of high-risk data breaches that could
          personally affect them.
        </p>
      </div>
      <!-- Modal footer -->
      <div
        class="flex items-center p-4 border-t border-gray-200 rounded-b md:p-5 dark:border-gray-600"
      >
        <button
          data-modal-hide="default-modal"
          type="button"
          class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
          >I accept</button
        >
        <button
          data-modal-hide="default-modal"
          type="button"
          class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"
          >Decline</button
        >
      </div>
    </div>
  </div>
</div>
<form
  hx-post={`/scoring/${id}/postscore`}
  hx-indicator="body"
  hx-swap="none"
  @htmx:after-request="hideForm()"
  x-cloak
  x-transition
  x-transition:enter.duration.500ms
  x-transition:leave.duration.250ms
  x-show="isScoring"
  class="absolute bottom-0 left-0 z-10 w-full p-4 bg-white shadow-lg"
  x-on:click.outside="hideForm()"
>
  <div class="scoringformheader">
    <div>
      <strong x-text="playerName"></strong>
      <a x-on:click="hideForm()">X</a>
    </div>
    <div>
      <span class="holeInfo">Hål: <span x-text="number"></span></span>
      <span>Par:<span x-text="par"></span></span>
      <span>Index:<span x-text="index"></span></span>
    </div>
  </div>

  <input type="hidden" name="special" value={special ? '1' : '0'} />
  <input type="hidden" name="par" x-model="par" />
  <input type="hidden" name="hole" x-model="number" />
  <input type="hidden" name="scorecard_id" x-model="scorecardId" />
  <input type="hidden" name="extra_strokes" x-model="givenStrokes" />

  <div
    class="picker-row"
    x-data="{
      strokes: $store.strokes ?? 1,
      putts: $store.putts ?? 0,
      beers: $store.beers ?? 0,
      ciders: $store.ciders ?? 0,
      setValue(field, value) {
        this[field] = value;
        $store[field] = value;
      }
    }"
  >
    <template
      x-for="(picker, idx) in [{label: 'Slag', name: 'strokes', min: 1, max: 15}, {label: 'Puttar', name: 'putts', min: 0, max: 8}]"
      :key="picker.name"
    >
      <div class="picker-col">
        <div class="picker-label" x-text="picker.label"></div>
        <div
          class="picker-list"
          :id="picker.name + '-picker'"
          tabindex="0"
          x-ref="picker.name"
          @scroll.debounce.100ms="() => {
            const el = $event.target;
            const snapIndex = Math.round(el.scrollTop / 40);
            setValue(picker.name, picker.min + snapIndex+1);
          }"
        >
          <template x-for="n in (picker.max - picker.min + 1)">
            <div
              class="picker-item"
              :class="(picker.min + n - 1) === $data[picker.name] ? 'active' : ''"
              @click="setValue(picker.name, picker.min + n - 1); $refs[picker.name].scrollTo({top: (n-1)*40, behavior: 'smooth'})"
              x-text="picker.min + n - 1"
            >
            </div>
          </template>
        </div>
        <input
          type="hidden"
          :name="picker.name"
          :value="$data[picker.name]"
          x-model="$data[picker.name]"
        />
      </div>
    </template>
  </div>
  <button type="submit" class="btn">Spara</button>
</form>
<div class="overlay" x-show="isScoring"></div>

<style>
  .picker-row {
    display: flex;
    flex-direction: row;
    gap: 1.5rem;
    justify-content: center;
    margin: 1.5rem 0;
  }
  .picker-col {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 120px;
  }
  .picker-label {
    font-size: 0.95em;
    color: #888;
    margin-bottom: 0.5em;
  }
  .picker-list {
    height: 120px;
    width: 100px;
    overflow-y: auto;
    scroll-snap-type: y mandatory;
    border-radius: 8px;
    background: #faf7f7;
    border: 1px solid #eee;
    box-shadow: 0 1px 4px #0001;
    margin-bottom: 0.5em;
    scrollbar-width: thin;
    scrollbar-color: #ccc #faf7f7;
  }
  .picker-item {
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    scroll-snap-align: center;
    font-size: 1.2em;
    color: #888;
    cursor: pointer;
    transition:
      color 0.2s,
      font-weight 0.2s;
  }
  .picker-item.active {
    color: #d32f2f;
    font-weight: bold;
    font-size: 2em;
  }
  .picker-list::-webkit-scrollbar {
    width: 6px;
  }
  .picker-list::-webkit-scrollbar-thumb {
    background: #eee;
    border-radius: 4px;
  }
</style>
