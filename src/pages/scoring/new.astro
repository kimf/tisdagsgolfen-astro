---
import 'src/styles/newscoringsession.css';
import AppScreen from 'src/layouts/AppScreen.astro';
import db from 'src/db';

import Settings from 'src/components/newscoringsession/Settings.astro';
import CourseSelector from 'src/components/newscoringsession/CourseSelector.astro';
import TeamSetup from 'src/components/newscoringsession/TeamSetup.astro';
import PlayerSetup from 'src/components/newscoringsession/PlayerSetup.astro';
import { createScoringSession } from 'src/db/mutations/createScoringSession';

if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    const userId = await Astro.session?.get('userId');

    if (!userId) {
      throw new Error('Logga in fÃ¶r att skapa scoringSession');
    }

    const createdId = await createScoringSession(Number(userId), formData);

    return Astro.redirect(`/scoring/${createdId}`);
  } catch (e) {
    console.warn(e);
  }
}

const allPlayers = await db.query.profiles.findMany({
  where: (players, { eq }) => eq(players.active, true),
  orderBy: (players, { asc }) => [asc(players.fullName)]
});

const joinId = Astro.url.searchParams.get('joinId') || '';
let joinSession = null;
if (joinId) {
  joinSession = await db.query.scoringSessions.findFirst({
    where: (sessions, { eq }) => eq(sessions.id, Number(joinId))
  });
}
---

<AppScreen title="Ny Runda">
  <form
    method="POST"
    x-data={`teamForm(${joinSession?.courseId}, ${joinSession?.special}, ${joinSession?.teamEvent}, ${joinSession?.strokes})`}
  >
    <Settings />
    <CourseSelector />
    <TeamSetup allPlayers={allPlayers} />
    <PlayerSetup allPlayers={allPlayers} />
    <button class="btn" type="submit" style="margin-top: 2rem;" :disabled="disableSave"
      >SPELA GOLF</button
    >
  </form>
</AppScreen>
<script src="src/assets/alpine//NewScoringSessionController.ts"></script>
