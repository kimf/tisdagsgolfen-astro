---
import { eq } from 'drizzle-orm';
import getDb from 'src/db';
import { scoringSessions } from 'src/db/schema';

const userId = Astro.cookies.get('userId')?.value || undefined;

if (!userId) throw new Error('Logga in för att stänga runda');

const db = getDb(Astro.locals);

if (Astro.request.method === 'POST' && userId === '2') {
  const activeSessions = await db.query.scoringSessions.findMany({
    where: (sessions, { eq }) => eq(sessions.state, 'PENDING')
  });

  const promises = [];
  for (const session of activeSessions) {
    promises.push(
      db.update(scoringSessions).set({ state: 'CLOSED' }).where(eq(scoringSessions.id, session.id))
    );
  }

  const res = await Promise.all(promises);

  return new Response(null, {
    status: 204,
    statusText: 'No Content',
    headers: {
      'HX-Redirect': '/'
    }
  });
} else {
  return new Response(null, {
    status: 204,
    statusText: 'No Content',
    headers: {
      'HX-Redirect': `/finalleaderboard`
    }
  });
}
---
